// <auto-generated />
using System;
using HTTPMediaPlayerCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HTTPMediaPlayerCore.Migrations
{
    [DbContext(typeof(DuwaysContext))]
    [Migration("20201103143040_SocialLinksAdd")]
    partial class SocialLinksAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.ActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("vd_ActionLog");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.ActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("vd_ActionType");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.AuthorCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("vd_AuthorCourses");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("vd_Category");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alpha2")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Alpha3")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("EngName")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("ISO")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("RusName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("vd_Countries");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActivationFreq")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Contents")
                        .HasColumnType("NVARCHAR(4000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(4000)");

                    b.Property<string>("ForWhom")
                        .HasColumnType("NVARCHAR(4000)");

                    b.Property<int?>("FullCourseId")
                        .HasColumnType("int");

                    b.Property<bool?>("HasDownloadItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasPackages")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasTrial")
                        .HasColumnType("bit");

                    b.Property<string>("Info")
                        .HasColumnType("NVARCHAR(4000)");

                    b.Property<bool?>("IsBook")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForAdults")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForAdvanced")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForBeginners")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForIntermediate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForKids")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLanguageCourse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPackage")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWritingCourse")
                        .HasColumnType("bit");

                    b.Property<string>("LessonName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("LessonNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PageText")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<int?>("ParentCourseId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("PriceDownloadItem")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("NVARCHAR(400)");

                    b.Property<string>("UrlName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("vd_Courses");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.CourseLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsForTrial")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LessonId");

                    b.ToTable("vd_CourseLessons");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ext")
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Url")
                        .HasColumnType("NVARCHAR(1000)");

                    b.HasKey("Id");

                    b.ToTable("vd_Files");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Text")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("vd_Lessons");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LoginDT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutDT")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("vd_Log");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<decimal?>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IncSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ResultResponse")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("SignatureValue")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserCourseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserCourseId");

                    b.HasIndex("UserId");

                    b.ToTable("vd_Orders");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Facebook")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Instagram")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAuthor")
                        .HasColumnType("bit");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalPageHeaderPic")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("PersonalPageSlogan")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("PersonalPageTitle")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UrlName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VK")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("YouTube")
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("vd_Users");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.UserCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("vd_UserCourses");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.UserLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLinkSent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReadByUser")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("vd_UserLessons");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.ActionLog", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.ActionType", "ActionType")
                        .WithMany("ActionLogs")
                        .HasForeignKey("ActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTTPMediaPlayerCore.Models.User", "User")
                        .WithMany("ActionLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.AuthorCourse", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTTPMediaPlayerCore.Models.User", "User")
                        .WithMany("AuthorCourses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Course", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.CourseLesson", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.Course", "Course")
                        .WithMany("CourseLessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTTPMediaPlayerCore.Models.Lesson", "Lesson")
                        .WithMany("CourseLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Lesson", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.File", "File")
                        .WithMany("Lessons")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Log", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.Order", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.Course", "Course")
                        .WithMany("Orders")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTTPMediaPlayerCore.Models.UserCourse", "UserCourse")
                        .WithMany("Orders")
                        .HasForeignKey("UserCourseId");

                    b.HasOne("HTTPMediaPlayerCore.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.User", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.UserCourse", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.Course", "Course")
                        .WithMany("UserCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTTPMediaPlayerCore.Models.User", "User")
                        .WithMany("UserCourses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HTTPMediaPlayerCore.Models.UserLesson", b =>
                {
                    b.HasOne("HTTPMediaPlayerCore.Models.Course", "Course")
                        .WithMany("UserLessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTTPMediaPlayerCore.Models.Lesson", "Lesson")
                        .WithMany("UserLessons")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTTPMediaPlayerCore.Models.User", "User")
                        .WithMany("UserLessons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
